name: Node npm

on: [push, pull_request]

jobs:
  default:
    strategy:
      matrix:
        node: [10, 12]
        os: [macOS-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Setup yarn
        run: |
          curl -o- -L https://yarnpkg.com/install.sh | bash
          export PATH="$HOME/.yarn/bin:$PATH"
      - name: Install Dependencies
        run: yarn --frozen-lockfile

      - name: Build, Lint and Test
        run: |
          yarn lint
          yarn test
          yarn build
        env:
          EFF_NO_LINK_RULES: 'true'
          PARSER_NO_WATCH: 'true'

      - name: Codecov
        if: matrix.os == 'macOS-latest'
        run: |
          yarn global add codecov codacy-coverage
          codecov
          cat ./coverage/lcov.info | codacy-coverage --username JounQin --projectName babel-preset-proposal-typescript
        env:
          CI: 'true'
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          CODACY_ACCOUNT_TOKEN: ${{ secrets.CODACY_ACCOUNT_TOKEN }}
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

      - name: Code Checks
        if: matrix.os == 'macOS-latest'
        run: |
          yarn global add @codechecks/client @codechecks/build-size-watcher
          codechecks
        env:
          CI: 'true'
          CC_SECRET: ${{ secrets.CC_SECRET }}

      - name: Publish GitHub Release and npm Package
        if: matrix.os == 'macOS-latest' && github.event_name == 'push' && github.ref	== 'refs/heads/master'
        run: bash scripts/npm-deploy.sh
        env:
          CI: 'true'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_BRANCH: master
          GH_REPO: ${{ github.repository }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
